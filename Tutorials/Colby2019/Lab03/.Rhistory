geom_point(aes(x=jday,y=Chl_Total,color = factor(Station))) +
geom_path(aes(x=jday,y=Chl_Total,color = factor(Station))) +
labs(y="Total [Chl] (Âµg/L)", x="Julian Day", color="Station") +
scale_color_manual(values=c("#a6cee3","#1f78b4","#b2df8a","#33a02c"))
setwd('C:/Users/nmayot/Documents/PostDoc/teaching supervise/Colby 2019/Rbigelow/Tutorials/Colby2019/Lab04')
CTDdata <- read.csv('Colby_cruise_data_2012-2017.csv')
library("ggplot2")
#making a list of the dates of each cruise
dates <- CTDdata$Date
# converting our dates to R date-times
Rdates <- as.Date(as.character(dates),"%Y%m%d")
# making a list of the year
yyyy <- as.numeric(format(Rdates,"%Y"))
# making a list of the months
mm <- as.numeric(format(Rdates,"%m"))
# making a list of the days
dd <- as.numeric(format(Rdates,"%d"))
# determining the day of year (Julian Day) for each date
jday <- as.numeric(format(Rdates,"%j"))
# add these to our dataframe
CTDdata$Rdates <- Rdates
CTDdata$year <- yyyy
CTDdata$month <- mm
CTDdata$day <- dd
CTDdata$jday <- jday
# extracting our chosen year and station of data from CTDdata
stationData <- subset(CTDdata, year == 2016 & Station == 4)
# making a list of the julian day each cruise took place on
alljday <- unique(stationData$jday)
#counting how many different days of year (i.e. cruises) we have
numCols <- length(alljday)
#creating an empty matrix with 100 rows (i.e. for 100 depths) and a column for each cruise in this year
TEM <- matrix(NA,nrow = 100, ncol = numCols)
#looping through each cruise
for (j in seq_along(alljday)){
#extracting the relevant cruise from the stationData data frame
jdayData <- subset(stationData, jday == alljday[j])
#looping through each depth interval (from 1m to 100m)
for (d in 1:100){
#binned temperature value for given depth interval
temp <- mean(jdayData[ceiling(jdayData$Depth) == d,"Temperature"])
#assinging the binned temperature to the d-th row and j-th column of the TEM matrix
TEM[d,j] <- temp
}
}
# Create the data frame
tem <- as.vector(TEM) # Temperature
jda <- as.vector(t(matrix(alljday,ncol=100,nrow=length(alljday))))  # Station number
dep <- as.vector(matrix(1:100,ncol=length(alljday),nrow=100))   # Depth
CTD <- data.frame(JulianDay=jday, Depth=dep, Temperature=tem)
# 2D plot
ggplot(CTD, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(aes(z = Temperature),color="white") +
scale_y_reverse() +
scale_fill_continuous(limits = c(8,17)) +
scale_x_continuous(limits = c(255,333)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title = "figName")
# extracting our chosen year and station of data from CTDdata
stationData <- subset(CTDdata, year == 2016 & Station == 4)
# making a list of the julian day each cruise took place on
alljday <- unique(stationData$jday)
#counting how many different days of year (i.e. cruises) we have
numCols <- length(alljday)
#creating an empty matrix with 100 rows (i.e. for 100 depths) and a column for each cruise in this year
TEM <- matrix(NA,nrow = 100, ncol = numCols)
#looping through each cruise
for (j in seq_along(alljday)){
#extracting the relevant cruise from the stationData data frame
jdayData <- subset(stationData, jday == alljday[j])
#looping through each depth interval (from 1m to 100m)
for (d in 1:100){
#binned temperature value for given depth interval
temp <- mean(jdayData[ceiling(jdayData$Depth) == d,"Temperature"])
#assinging the binned temperature to the d-th row and j-th column of the TEM matrix
TEM[d,j] <- temp
}
}
# Create the data frame
tem <- as.vector(TEM) # Temperature
jda <- as.vector(t(matrix(alljday,ncol=100,nrow=length(alljday))))  # Station number
dep <- as.vector(matrix(1:100,ncol=length(alljday),nrow=100))   # Depth
CTD <- data.frame(JulianDay=jday, Depth=dep, Temperature=tem)
# Create the data frame
tem <- as.vector(TEM) # Temperature
jda <- as.vector(t(matrix(alljday,ncol=100,nrow=length(alljday))))  # Station number
dep <- as.vector(matrix(1:100,ncol=length(alljday),nrow=100))   # Depth
CTD <- data.frame(JulianDay=jda, Depth=dep, Temperature=tem)
# 2D plot
ggplot(CTD, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(aes(z = Temperature),color="white") +
scale_y_reverse() +
scale_fill_continuous(limits = c(8,17)) +
scale_x_continuous(limits = c(255,333)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title = "figName")
# Remove NA values
x <- jda[!is.na(tem)]
y <- dep[!is.na(tem)]
z <- tem[!is.na(tem)]
# bivariate linear interpolation
CTD.li <- interp(x, y, z)
# Prepare the data frame for ggplot()
CTD.li$Temperature <- as.vector(CTD.li$z)
CTD.li$JulianDay <- as.vector(matrix(CTD.li$x,ncol=ncol(CTD.li$z),nrow=nrow(CTD.li$z)))
CTD.li$Depth <- as.vector(t(matrix(CTD.li$y,ncol=ncol(CTD.li$z),nrow=nrow(CTD.li$z))))
CTD.li <- as.data.frame(CTD.li)
# 2D plot
ggplot() +
geom_tile(data = CTD.li, aes(x=JulianDay, y=Depth, fill=Temperature)) +
geom_contour(data = CTD.li, aes(x=JulianDay, y=Depth, z = Temperature),color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
scale_y_reverse() + scale_fill_continuous(limits=c(8,18)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title ="Station 4, 2016")
ggplot() +
geom_tile(data = CTD.li, aes(x=JulianDay, y=Depth, fill=Temperature)) +
geom_contour(data = CTD.li, aes(x=JulianDay, y=Depth, z = Temperature),color="white") +
geom_dl(data = CTD.li, aes(label=Temperature),method="last.points") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
scale_y_reverse() + scale_fill_continuous(limits=c(8,18)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title ="Station 4, 2016")
libarary("directlabels")
library("directlabels")
ggplot() +
geom_tile(data = CTD.li, aes(x=JulianDay, y=Depth, fill=Temperature)) +
geom_contour(data = CTD.li, aes(x=JulianDay, y=Depth, z = Temperature),color="white") +
geom_dl(data = CTD.li, aes(label=Temperature),method="last.points") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
scale_y_reverse() + scale_fill_continuous(limits=c(8,18)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title ="Station 4, 2016")
p <- ggplot() +
geom_tile(data = CTD.li, aes(x=JulianDay, y=Depth, fill=Temperature)) +
geom_contour(data = CTD.li, aes(x=JulianDay, y=Depth, z = Temperature),color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
scale_y_reverse() + scale_fill_continuous(limits=c(8,18)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title ="Station 4, 2016")
p + geom_dl(data = CTD.li, aes(label=Temperature),method="last.points")
p <- ggplot() +
geom_tile(data = CTD.li, aes(x=JulianDay, y=Depth, fill=Temperature)) +
geom_contour(data = CTD.li, aes(x=JulianDay, y=Depth, z = Temperature),color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
scale_y_reverse() + scale_fill_continuous(limits=c(8,18)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title ="Station 4, 2016")
p + geom_dl(data = CTD.li, aes(label=..level..),method="last.points")
p + geom_dl(data = CTD.li, aes(label=..levels..),method="last.points")
p <- ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method="bottom.pieces", stat="contour")
p
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method="bottom.pieces", stat="contour",color="white")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), stat="contour",color="white")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method="default.picker", stat="contour",color="white")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method="top.pieces", stat="contour",color="white")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method="angled.boxes", stat="contour",color="white")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method="angled.boxes", stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method="last.polygons", stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method="first.polygons", stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method="top.pieces", stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method="maxvar.points", stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method="smart.grid", stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method=list("angled.boxes", cex = 2), stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method=list("angled.boxes", cex = 1), stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method=list("angled.boxes", cex = .5), stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method=list("angled.boxes", cex = .8), stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method=list(cex = .8, "angled.boxes"), stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method=list(cex = .5, "angled.boxes"), stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method=list(cex = .75, "angled.boxes"), stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_dl(aes(label=..level..), method=list(cex = .75, "angled.boxes"), stat="contour")
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
scale_y_reverse() + scale_fill_continuous(limits=c(8,18)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title ="Station 4, 2016")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .75, "angled.boxes"), stat="contour")
gplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .75, "angled.boxes"), stat="contour")
scale_y_reverse()
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .75, "angled.boxes"), stat="contour")
scale_y_reverse()
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .75, "angled.boxes"), stat="contour") +
scale_y_reverse()
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .75, "angled.boxes"), stat="contour") +
scale_y_reverse() + scale_fill_continuous(limits=c(8,18)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title ="Station 4, 2016")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour") +
scale_y_reverse() + scale_fill_continuous(limits=c(8,18)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title ="Station 4, 2016")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature)) +
geom_tile(aes(fill=Temperature)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour") +
scale_y_reverse() + scale_fill_continuous(limits=c(8,18)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title ="Station 4, 2016")
getwd()
ggsave("test.png")
ggplot() +
geom_tile(data = CTD.li, aes(x=JulianDay, y=Depth, z=Temperature,fill=Temperature)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour") +
scale_y_reverse() + scale_fill_continuous(limits=c(8,18)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title ="Station 4, 2016")
ggplot() +
geom_tile(data = CTD.li, aes(x=JulianDay, y=Depth,fill=Temperature)) +
geom_contour(data = CTD.li, aes(x=JulianDay, y=Depth,z=Temperature), color="white") +
geom_point(data = subset(CTD, !is.na(Temperature)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour") +
scale_y_reverse() + scale_fill_continuous(limits=c(8,18)) +
labs(y="Depth (m)", fill="Temperature (deg C)", title ="Station 4, 2016")
require("directlabels")
sectionPlot <- function(x,z,zLims,figName,clbName){
# DESCRIPTION OF ARGUMENTS:
# -----  x = x-variable, z = variable to plot in color,
# -----  zLims = limits of the colorscale,
# -----  title = title to give the figure
# -----  colName = label for the colorbar
require("ggplot2")
require("directlabels")
# Create the data frame
xvar <- as.vector(t(matrix(x,ncol=100,nrow=length(x))))  # Station number
zvar <- as.vector(z) # Temperature
yvar <- as.vector(matrix(1:100,ncol=length(x),nrow=100))   # Depth
CTD <- data.frame(JulianDay=xvar, Depth=yvar, Zvalue=zvar)
# Remove NA values
x <- xvar[!is.na(zvar)]
y <- yvar[!is.na(zvar)]
z <- zvar[!is.na(zvar)]
# bivariate linear interpolation
CTD.li <- interp(x, y, z)
# Prepare the data frame for ggplot()
CTD.li$variable <- as.vector(CTD.li$z)
CTD.li$JulianDay <- as.vector(matrix(CTD.li$x,ncol=ncol(CTD.li$z),nrow=nrow(CTD.li$z)))
CTD.li$Depth <- as.vector(t(matrix(CTD.li$y,ncol=ncol(CTD.li$z),nrow=nrow(CTD.li$z))))
CTD.li <- as.data.frame(CTD.li)
# 2D plot
p <- ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=variable)) +
geom_tile(aes(fill=variable)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Zvalue)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour") +
scale_y_reverse() + scale_fill_continuous(limits=zLims) +
labs(y="Depth (m)", fill=clbName, title = figName)
return(p)
}
col2matrix_yr_st <- function(dataset,yr,st,colName){
# DESCRIPTION OF ARGUMENTS:
# -----  dataset = data frame with CTD data
# -----  yr = year wanted
# -----  st = station wanted
# -----  colName = variable wanted
# extracting our chosen year and station of data from CTDdata
subdata <- subset(dataset, year == yr & Station == st)
# making a list of the julian day each cruise took place on
uniqj <- unique(subdata$jday)
#counting how many different days of year (i.e. cruises) we have
nbcol <- length(uniqj)
#creating an empty matrix with 100 rows (i.e. for 100 depths) and a column for each cruise in this year
MAT <- matrix(NA,nrow = 100, ncol = nbcol)
#looping through each cruise
for (j in seq_along(uniqj)){
#extracting the relevant cruise from the stationData data frame
subdataj <- subset(subdata, jday == uniqj[j])
#looping through each depth interval (from 1m to 100m)
for (d in 1:100){
#binned temperature value for given depth interval
djvalue <- mean(subdataj[ceiling(subdataj$Depth) == d,colName])
#assinging the binned temperature to the d-th row and j-th column of the MAT matrix
MAT[d,j] <- djvalue
}
}
# we can only return one object from a function, but we want to return two... so in this case, we can put the two objects into a list and return the list
returnList = list(mat = MAT, alljday = uniqj)
return(returnList)
}
output <- col2matrix_yr_st(dataset = CTDdata, yr = 2017, st = 4, colName = "Temperature")
str(output)
T2017st4 <- sectionPlot(output$alljday, output$mat, c(8,18), "Station 4, 2017", "Temperature (deg C)")
T2017st4
x = output$alljday; y = output$mat; zLims = c(8,18); figName = "Station 4, 2017"; clbName =  "Temperature (deg C)";
x
y
zLims
require("ggplot2")
require("directlabels")
# Create the data frame
xvar <- as.vector(t(matrix(x,ncol=100,nrow=length(x))))  # Station number
zvar <- as.vector(z) # Temperature
yvar <- as.vector(matrix(1:100,ncol=length(x),nrow=100))   # Depth
CTD <- data.frame(JulianDay=xvar, Depth=yvar, Zvalue=zvar)
x = output$alljday; z = output$mat; zLims = c(8,18); figName = "Station 4, 2017"; clbName =  "Temperature (deg C)";
require("ggplot2")
require("directlabels")
# Create the data frame
xvar <- as.vector(t(matrix(x,ncol=100,nrow=length(x))))  # Station number
zvar <- as.vector(z) # Temperature
yvar <- as.vector(matrix(1:100,ncol=length(x),nrow=100))   # Depth
CTD <- data.frame(JulianDay=xvar, Depth=yvar, Zvalue=zvar)
# Remove NA values
x <- xvar[!is.na(zvar)]
y <- yvar[!is.na(zvar)]
z <- zvar[!is.na(zvar)]
# bivariate linear interpolation
CTD.li <- interp(x, y, z)
# Prepare the data frame for ggplot()
CTD.li$variable <- as.vector(CTD.li$z)
CTD.li$JulianDay <- as.vector(matrix(CTD.li$x,ncol=ncol(CTD.li$z),nrow=nrow(CTD.li$z)))
CTD.li$Depth <- as.vector(t(matrix(CTD.li$y,ncol=ncol(CTD.li$z),nrow=nrow(CTD.li$z))))
CTD.li <- as.data.frame(CTD.li)
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=variable)) +
geom_tile(aes(fill=variable)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Zvalue)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour") +
scale_y_reverse() + scale_fill_continuous(limits=zLims) +
labs(y="Depth (m)", fill=clbName, title = figName)
str(CTD.li)
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=variable))
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=variable)) +
geom_tile(aes(fill=variable))
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=variable)) +
geom_tile(aes(fill=variable)) +
geom_contour(color="white")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=variable)) +
geom_tile(aes(fill=variable)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Zvalue)), aes(x=JulianDay, y=Depth),color="black")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=variable)) +
geom_tile(aes(fill=variable)) +
geom_contour(color="white") +
geom_point(data = subset(CTD, !is.na(Zvalue)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour") +
scale_y_reverse() + scale_fill_continuous(limits=zLims) +
labs(y="Depth (m)", fill=clbName, title = figName)
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_points(aes(x=JulianDay, y=Depth))
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_point(aes(x=JulianDay, y=Depth))
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth, z=variable)) +
geom_tile(aes(fill=variable))
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=variable))
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=variable)) +
geom_contour(aes(z=variable), color="white")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=variable)) +
geom_contour()
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(data = CTD.li, aes(fill=variable)) +
geom_contour(data = CTD.li, aes(z=variable), color="white")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(data = CTD.li, aes(fill=variable))
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=variable))
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=variable))
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=variable)) +
geom_contour(data = CTD.li, aes(z=variable), color="white")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=variable)) +
geom_contour(data = CTD.li, aes(z=variable), color="white") +
geom_point(data = subset(CTD, !is.na(Zvalue)), aes(x=JulianDay, y=Depth),color="black")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=variable)) +
geom_contour(data = CTD.li, aes(z=variable), color="white") +
geom_point(data = subset(CTD, !is.na(Zvalue)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(aes(label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=variable)) +
geom_contour(data = CTD.li, aes(z=variable), color="white") +
geom_point(data = subset(CTD, !is.na(Zvalue)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(data = CTD.li, aes(label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=variable)) +
geom_contour(data = CTD.li, aes(z=variable), color="white") +
geom_point(data = subset(CTD, !is.na(Zvalue)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(data = CTD.li, aes(z=variable, label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour")
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(aes(fill=variable)) +
geom_contour(data = CTD.li, aes(z=variable), color="white") +
geom_point(data = subset(CTD, !is.na(Zvalue)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(data = CTD.li, aes(z=variable, label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour") +
scale_y_reverse() + scale_fill_continuous(limits=zLims) +
labs(y="Depth (m)", fill=clbName, title = figName)
zLims
ggplot(data = CTD.li, aes(x=JulianDay, y=Depth)) +
geom_tile(data = CTD.li, aes(fill=variable)) +
geom_contour(data = CTD.li, aes(z=variable), color="white") +
geom_point(data = subset(CTD, !is.na(Zvalue)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(data = CTD.li, aes(z=variable, label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour") +
scale_y_reverse() + scale_fill_continuous(limits=zLims) +
labs(y="Depth (m)", fill=clbName, title = figName)
ggplot() +
geom_tile(data = CTD.li, aes(x=JulianDay, y=Depth, fill=variable)) +
geom_contour(data = CTD.li, aes(x=JulianDay, y=Depth, z=variable), color="white") +
geom_point(data = subset(CTD, !is.na(Zvalue)), aes(x=JulianDay, y=Depth),color="black") +
geom_dl(data = CTD.li, aes(x=JulianDay, y=Depth, z=variable, label=..level..), method=list(cex = .65, "angled.boxes"), stat="contour") +
scale_y_reverse() + scale_fill_continuous(limits=zLims) +
labs(y="Depth (m)", fill=clbName, title = figName)
setwd('C:/Users/nmayot/Documents/PostDoc/teaching supervise/Colby 2019 - For Nico only/lab04/')
discreteDATA <- read.csv('discrete_data.csv')
library("ggplot2")
str(discreteDATA)
setwd('C:/Users/nmayot/Documents/PostDoc/teaching supervise/Colby 2019 - For Nico only/lab04/')
discreteDATA <- read.csv('discrete_data.csv')
library("ggplot2")
ggplot(subset(discreteDATA, Depth == 2 & year == 2016)) +
geom_point(aes(x=jday,y=Flowcam_Biomass,color = factor(Station))) +
geom_path(aes(x=jday,y=Flowcam_Biomass,color = factor(Station))) +
labs(y="Total [Chl] (Âµg/L)", x="Julian Day", color="Station")
ggplot(subset(discreteDATA, Depth == 2 & year == 2016)) +
geom_point(aes(x=jday,y=NO3_NO2,color = factor(Station))) +
geom_path(aes(x=jday,y=NO3_NO2,color = factor(Station))) +
labs(y="Total [Chl] (Âµg/L)", x="Julian Day", color="Station")
setwd("C:/Users/nmayot/Documents/PostDoc/teaching supervise/Colby 2019/Rbigelow/Tutorials/Colby2019/Lab03")
CTDdata <- read.csv('Colby_cruise_data_2012-2017.csv')
#creating an empty matrix with 100 rows (i.e. for 100 depths) and 4 columns (i.e. one for each station)
TEM <- matrix(NA,nrow = 100, ncol = 4)
#looping through each station
# start_time <- Sys.time()
for (st in 1:4){
# extracting/ subsetting the relevant station from the cruiseData data frame
stationData <- subset(CTDdata, Station == st & Date == 20160908)
#looping through each depth interval (from 1m to 100m)
for (j in 1:100){
# binned temperature value for given depth interval
temp <- mean(stationData[ceiling(stationData$Depth)==j,'Temperature'])
# assinging the binned temperature to the j-th row and st-th column of the TEM matrix
TEM[j,st] <- temp
}
}
