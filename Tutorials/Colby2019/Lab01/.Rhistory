geom_tile(aes(x = lon, y = lat, fill = factor(clus))) +
scale_fill_manual(values = col[1:max(clus)], expand = c(0, 0)) +
coord_quickmap() +  # Prevents stretching when resizing
theme_bw() +
xlab("Longitude") +
ylab("Latitude") +
theme(legend.title = element_blank()) +
coastd
# - - - Annual clustering
folder <- "C:/Users/nmayot/Documents/PostDoc/data/satellite/MedOC4AD4/" # folder with data
filename <- "MedOC_year_1998_2017_8D_9km_CHL_CoastFree.rdata" # Name of the dataset
load(file = paste(folder,filename,sep="")) # load dataset (row = pixels, column = variables)
# --- Save PCA results obtained from climatology
dataset$pca <- pca
dataset$centers <- centers
dataset$pcs <- pcs
dataset$threshold <- threshold
rm(list=ls()) # clear all variable
library(e1071)
library(fpc) # for clustering
# folder <- "C:/Users/nmayot/Documents/PostDoc/data/satellite/MedOC4AD4/" # folder with data
# filename <- "MedOC_clim_1997_2017_8D_9km_CHL_CoastFree.rdata" # Name of the dataset
# load(file = paste(folder,filename,sep="")) # load dataset (row = pixels, column = variables)
#
# CHL <- dataset$CHL_norm[,c(24:46,1:23)] # dataset to be cluterized
# gp <- dataset$gp # pixel (observations) to be clusterized
# tschl <- CHL[gp,]
#
# # --- conduct PCA
# pca <- prcomp(tschl, retx=TRUE, center=TRUE, scale=TRUE)
# explvar <- round(pca$sdev^2/sum(pca$sdev^2)*100) # percent explained variance
#
#
# # --- Save PCA results
# dataset$pca <- pca
# dataset$explvar <- explvar
#
#
# # --- Determined threshold (of membership) with a cmeans on climatological dataset
# pred <- predict(pca, newdata=CHL[gp,])
# pcs <- 4
# centers <- apply(pred[,1:pcs],2,function(x) {aggregate(x,list(dataset$cluster),mean)[,2]})
# climcmeans <- cmeans(pred[,1:pcs], centers[,1:pcs])
#
# climmbs <- apply(climcmeans$membership,1,max)
# threshold <- aggregate(climmbs,list(climcmeans$cluster),function(x) {quantile(x,.1)})[,2]
# - - - Annual clustering
folder <- "C:/Users/nmayot/Documents/PostDoc/data/satellite/MedOC4AD4/" # folder with data
filename <- "MedOC_year_1998_2017_8D_9km_CHL_CoastFree.rdata" # Name of the dataset
load(file = paste(folder,filename,sep="")) # load dataset (row = pixels, column = variables)
# # --- Save PCA results obtained from climatology
# dataset$pca <- pca
# dataset$centers <- centers
# dataset$pcs <- pcs
# dataset$threshold <- threshold
dim(dataset$CHL_norm)[3]
dataset$cluster <- array(NA,dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[2])
dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[2]
dim(dataset$CHL_norm)[1]
dim(dataset$CHL_norm)[2]
dataset$cluster <- array(NA,c(dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[3]))
str(dataset)
rm(list=ls()) # clear all variable
library(e1071)
library(fpc) # for clustering
# folder <- "C:/Users/nmayot/Documents/PostDoc/data/satellite/MedOC4AD4/" # folder with data
# filename <- "MedOC_clim_1997_2017_8D_9km_CHL_CoastFree.rdata" # Name of the dataset
# load(file = paste(folder,filename,sep="")) # load dataset (row = pixels, column = variables)
#
# CHL <- dataset$CHL_norm[,c(24:46,1:23)] # dataset to be cluterized
# gp <- dataset$gp # pixel (observations) to be clusterized
# tschl <- CHL[gp,]
#
# # --- conduct PCA
# pca <- prcomp(tschl, retx=TRUE, center=TRUE, scale=TRUE)
# explvar <- round(pca$sdev^2/sum(pca$sdev^2)*100) # percent explained variance
#
#
# # --- Save PCA results
# dataset$pca <- pca
# dataset$explvar <- explvar
#
#
# # --- Determined threshold (of membership) with a cmeans on climatological dataset
# pred <- predict(pca, newdata=CHL[gp,])
# pcs <- 4
# centers <- apply(pred[,1:pcs],2,function(x) {aggregate(x,list(dataset$cluster),mean)[,2]})
# climcmeans <- cmeans(pred[,1:pcs], centers[,1:pcs])
#
# climmbs <- apply(climcmeans$membership,1,max)
# threshold <- aggregate(climmbs,list(climcmeans$cluster),function(x) {quantile(x,.1)})[,2]
# - - - Annual clustering
folder <- "C:/Users/nmayot/Documents/PostDoc/data/satellite/MedOC4AD4/" # folder with data
filename <- "MedOC_year_1998_2017_8D_9km_CHL_CoastFree.rdata" # Name of the dataset
load(file = paste(folder,filename,sep="")) # load dataset (row = pixels, column = variables)
# # --- Save PCA results obtained from climatology
# dataset$pca <- pca
# dataset$centers <- centers
# dataset$pcs <- pcs
# dataset$threshold <- threshold
# --- load pca results
pca <- dataset$pca
pcs <- dataset$pcs
centers <- dataset$centers
threshold <- dataset$threshold
# --- Annual cmeans
dataset$cluster <- array(NA,dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[2])
dataset$mbs <- array(NA,dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[2])
for (y in 1:dim(dataset$CHL_norm)[3]) {
# annual data modified with climatological pca coordinates
gp <- dataset$gp[[y]]
pred <- predict(pca, newdata=dataset$CHL_norm[gp,,y])
# annual data clusterized
a <- cmeans(pred[,1:pcs], centers[,1:pcs])
yearmbs <- apply(a$membership,1,max)
dataset$cluster[gp,y] <- a$cluster
dataset$mbs[gp,y] <- yearmbs
}
pca
dataset$pca
rm(list=ls()) # clear all variable
library(e1071)
library(fpc) # for clustering
folder <- "C:/Users/nmayot/Documents/PostDoc/data/satellite/MedOC4AD4/" # folder with data
filename <- "MedOC_clim_1997_2017_8D_9km_CHL_CoastFree.rdata" # Name of the dataset
load(file = paste(folder,filename,sep="")) # load dataset (row = pixels, column = variables)
CHL <- dataset$CHL_norm[,c(24:46,1:23)] # dataset to be cluterized
gp <- dataset$gp # pixel (observations) to be clusterized
tschl <- CHL[gp,]
# --- conduct PCA
pca <- prcomp(tschl, retx=TRUE, center=TRUE, scale=TRUE)
explvar <- round(pca$sdev^2/sum(pca$sdev^2)*100) # percent explained variance
# --- Save PCA results
dataset$pca <- pca
dataset$explvar <- explvar
# --- Determined threshold (of membership) with a cmeans on climatological dataset
pred <- predict(pca, newdata=CHL[gp,])
pcs <- 4
centers <- apply(pred[,1:pcs],2,function(x) {aggregate(x,list(dataset$cluster),mean)[,2]})
climcmeans <- cmeans(pred[,1:pcs], centers[,1:pcs])
climmbs <- apply(climcmeans$membership,1,max)
threshold <- aggregate(climmbs,list(climcmeans$cluster),function(x) {quantile(x,.1)})[,2]
# --- Save PCA results obtained from climatology
dataset$pca <- pca
dataset$centers <- centers
dataset$pcs <- pcs
dataset$threshold <- threshold
save(dataset, file = paste(folder,filename,sep=""))
rm(list=ls()) # clear all variable
library(e1071)
library(fpc) # for clustering
folder <- "C:/Users/nmayot/Documents/PostDoc/data/satellite/MedOC4AD4/" # folder with data
filename <- "MedOC_clim_1997_2017_8D_9km_CHL_CoastFree.rdata" # Name of the dataset
load(file = paste(folder,filename,sep="")) # load dataset (row = pixels, column = variables)
# CHL <- dataset$CHL_norm[,c(24:46,1:23)] # dataset to be cluterized
# gp <- dataset$gp # pixel (observations) to be clusterized
# tschl <- CHL[gp,]
#
# # --- conduct PCA
# pca <- prcomp(tschl, retx=TRUE, center=TRUE, scale=TRUE)
# explvar <- round(pca$sdev^2/sum(pca$sdev^2)*100) # percent explained variance
#
#
# # --- Save PCA results
# dataset$pca <- pca
# dataset$explvar <- explvar
#
#
# # --- Determined threshold (of membership) with a cmeans on climatological dataset
# pred <- predict(pca, newdata=CHL[gp,])
# pcs <- 4
# centers <- apply(pred[,1:pcs],2,function(x) {aggregate(x,list(dataset$cluster),mean)[,2]})
# climcmeans <- cmeans(pred[,1:pcs], centers[,1:pcs])
#
# climmbs <- apply(climcmeans$membership,1,max)
# threshold <- aggregate(climmbs,list(climcmeans$cluster),function(x) {quantile(x,.1)})[,2]
#
# # --- Save PCA results obtained from climatology
# dataset$pca <- pca
# dataset$centers <- centers
# dataset$pcs <- pcs
# dataset$threshold <- threshold
#
# save(dataset, file = paste(folder,filename,sep=""))
# --- load pca results
pca <- dataset$pca
pcs <- dataset$pcs
centers <- dataset$centers
threshold <- dataset$threshold
# - - - Annual clustering
folder <- "C:/Users/nmayot/Documents/PostDoc/data/satellite/MedOC4AD4/" # folder with data
filename <- "MedOC_year_1998_2017_8D_9km_CHL_CoastFree.rdata" # Name of the dataset
load(file = paste(folder,filename,sep="")) # load dataset (row = pixels, column = variables)
# --- Annual cmeans
dataset$cluster <- array(NA,dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[2])
dataset$mbs <- array(NA,dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[2])
for (y in 1:dim(dataset$CHL_norm)[3]) {
# annual data modified with climatological pca coordinates
gp <- dataset$gp[[y]]
pred <- predict(pca, newdata=dataset$CHL_norm[gp,,y])
# annual data clusterized
a <- cmeans(pred[,1:pcs], centers[,1:pcs])
yearmbs <- apply(a$membership,1,max)
dataset$cluster[gp,y] <- a$cluster
dataset$mbs[gp,y] <- yearmbs
}
# --- Annual cmeans
dataset$cluster <- array(NA,c(dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[2]))
dataset$mbs <- array(NA,c(dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[2]))
for (y in 1:dim(dataset$CHL_norm)[3]) {
# annual data modified with climatological pca coordinates
gp <- dataset$gp[[y]]
pred <- predict(pca, newdata=dataset$CHL_norm[gp,,y])
# annual data clusterized
a <- cmeans(pred[,1:pcs], centers[,1:pcs])
yearmbs <- apply(a$membership,1,max)
dataset$cluster[gp,y] <- a$cluster
dataset$mbs[gp,y] <- yearmbs
}
test <- apply(dataset$cluster, 1, function(x) {uniqx <- unique(x); uniqx[which.max(tabulate(match(x, uniqx)))]})
test
test[!is.na(test)]
[!is.na(test)
!is.na(test)
which(!is.na(test))
which(!is.na(dataset$cluster[,1]))
x <- dataset$cluster[20546,]
x
uniqx <- unique(x)
uniqx
uniqx <- unique(x,na.rm=T)
uniqx
match(x, uniqx)
x
# --- Annual cmeans
dataset$cluster <- array(NA,c(dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[3]))
dataset$mbs <- array(NA,c(dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[3]))
for (y in 1:dim(dataset$CHL_norm)[3]) {
# annual data modified with climatological pca coordinates
gp <- dataset$gp[[y]]
pred <- predict(pca, newdata=dataset$CHL_norm[gp,,y])
# annual data clusterized
a <- cmeans(pred[,1:pcs], centers[,1:pcs])
yearmbs <- apply(a$membership,1,max)
dataset$cluster[gp,y] <- a$cluster
dataset$mbs[gp,y] <- yearmbs
}
test <- apply(dataset$cluster, 1, function(x) {uniqx <- unique(x); uniqx[which.max(tabulate(match(x, uniqx)))]})
test <- apply(dataset$cluster, 1, function(x) {uniqx <- unique(x); uniqx[which.max(tabulate(match(x, uniqx)))]})
test
which(!is.na(test))
gp<-which(!is.na(test))
clus<-test[gp]
lon <- dataset$LON[gp]
lat <- dataset$LAT[gp]
med <- read.csv("C:/Users/nmayot/Documents/PostDoc/data/gshhg/gshhg_medit_i.csv") # file to draw the coast
coastd <- geom_polygon(data=med, aes(x=lon, y=lat), fill="black",colour=0)
col <- brewer.pal(max(clus), "RdBu")
clus2 <- clus
# for the map
ggplot() +
# geom_tile(aes(x = lon, y = lat, fill = mbs)) +
geom_tile(aes(x = lon, y = lat, fill = factor(clus2))) +
scale_fill_manual(values = col[1:max(clus)], expand = c(0, 0)) +
coord_quickmap() +  # Prevents stretching when resizing
theme_bw() +
xlab("Longitude") +
ylab("Latitude") +
theme(legend.title = element_blank()) +
coastd
rm(list=ls()) # clear all variable
library(e1071)
library(fpc) # for clustering
folder <- "C:/Users/nmayot/Documents/PostDoc/data/satellite/MedOC4AD4/" # folder with data
filename <- "MedOC_clim_1997_2017_8D_9km_CHL_CoastFree.rdata" # Name of the dataset
load(file = paste(folder,filename,sep="")) # load dataset (row = pixels, column = variables)
# CHL <- dataset$CHL_norm[,c(24:46,1:23)] # dataset to be cluterized
# gp <- dataset$gp # pixel (observations) to be clusterized
# tschl <- CHL[gp,]
#
# # --- conduct PCA
# pca <- prcomp(tschl, retx=TRUE, center=TRUE, scale=TRUE)
# explvar <- round(pca$sdev^2/sum(pca$sdev^2)*100) # percent explained variance
#
#
# # --- Save PCA results
# dataset$pca <- pca
# dataset$explvar <- explvar
#
#
# # --- Determined threshold (of membership) with a cmeans on climatological dataset
# pred <- predict(pca, newdata=CHL[gp,])
# pcs <- 4
# centers <- apply(pred[,1:pcs],2,function(x) {aggregate(x,list(dataset$cluster),mean)[,2]})
# climcmeans <- cmeans(pred[,1:pcs], centers[,1:pcs])
#
# climmbs <- apply(climcmeans$membership,1,max)
# threshold <- aggregate(climmbs,list(climcmeans$cluster),function(x) {quantile(x,.1)})[,2]
#
# # --- Save PCA results obtained from climatology
# dataset$pca <- pca
# dataset$centers <- centers
# dataset$pcs <- pcs
# dataset$threshold <- threshold
#
# save(dataset, file = paste(folder,filename,sep=""))
# --- load pca results
pca <- dataset$pca
pcs <- dataset$pcs
centers <- dataset$centers
threshold <- dataset$threshold
# - - - Annual clustering
folder <- "C:/Users/nmayot/Documents/PostDoc/data/satellite/MedOC4AD4/" # folder with data
filename <- "MedOC_year_1998_2017_8D_9km_CHL_CoastFree.rdata" # Name of the dataset
load(file = paste(folder,filename,sep="")) # load dataset (row = pixels, column = variables)
# --- Annual cmeans
dataset$cluster <- array(NA,c(dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[3])) # 2D matrix of data (CHL data x nb of years)
dataset$mbs <- array(NA,c(dim(dataset$CHL_norm)[1],dim(dataset$CHL_norm)[3])) # 2D matrix of membership
for (y in 1:dim(dataset$CHL_norm)[3]) {
# annual data modified with climatological pca coordinates
gp <- dataset$gp[[y]]
pred <- predict(pca, newdata=dataset$CHL_norm[gp,,y])
# annual data clusterized
a <- cmeans(pred[,1:pcs], centers[,1:pcs])
yearmbs <- apply(a$membership,1,max)
dataset$cluster[gp,y] <- a$cluster
dataset$mbs[gp,y] <- yearmbs
}
# --- Which timeseries have a membership lower than the threshold?
bad_gp <- list()
CHL_norm_bad <- c()
for (y in 1:dim(dataset$CHL_norm)[3]) {
bad_gp[[y]] <- dataset$gp[[y]][which(dataset$mbs[dataset$gp[[y]],y]<threshold[dataset$cluster[dataset$gp[[y]],y]])]
CHL_norm_bad <- rbind(CHL_norm_bad, dataset$CHL_norm[bad_gp[[y]],,y])
}
# --- Kmeans with bad pixel timeseries
# best number of cluster with a silhouette analysis
dim(CHL_norm_bad)
folder <- "C:/Users/nmayot/Documents/PostDoc/data/satellite/MedOC4AD4/" # folder with data
filename <- "MedOC_clim_1997_2017_8D_9km_CHL_CoastFree.rdata" # Name of the dataset
load(file = paste(folder,filename,sep="")) # load dataset (row = pixels, column = variables)
str(dataset)
nclu <- 4
nruns <- 1 # number of time you should do the clustering
niter <- 1 # number of iteration before to stop the kmeans process
cl<-kmeansCBI(CHL_norm_bad,k=nclu,scaling=F,runs=nruns, iter.max=niter, algorithm="Lloyd") # clustering Kmeans, runs: Number of starts of the k
cl$result
str(cl$result)
cl$centers
cl$result$centers
plot(cl$result$centers)
plot(cl$result$centers[1,])
lines(cl$result$centers[2,])
lines(cl$result$centers[3,])
lines(cl$result$centers[4,])
plot(cl$result$centers[1,],ylim=c(0,1))
lines(cl$result$centers[2,])
lines(cl$result$centers[3,])
lines(cl$result$centers[4,])
help(min)
help(min)
help(max)
help(max)
example(min)
example(mean)
getwd()
set("C:\Users\nmayot\Documents\PostDoc\teaching supervise\Colby 2019 - For Nico only\lab01")
setwd("C:/Users/nmayot/Documents/PostDoc/teaching supervise/Colby 2019 - For Nico only/lab01")
getwd()
setwd("C:/Users/nmayot/Documents/")
getwd()
setwd("~/PostDoc/teaching supervise/Colby 2019 - For Nico only/lab01")
setwd("C:/Users/nmayot/Documents/PostDoc/teaching supervise/Colby 2019 - For Nico only/lab01/")
1+1
c(1:20)+1
a = 2
a
b <- 3
b
a <- b
a
z <- "R is fun"
z
a <- 1
a < b
x <- a < b
x
x
X
1a <- 0
a1 <- 0
a1
mean(1:10)
mean <- 0
mean(1:10)
mean
mean[1]
min
mine
a = 2 # this was a test
a
help(max)
# This is a scri
help(max) # This is the help function
c(1:10)
a <- c(1:10)
L3 <- LETTERS[1:3]
fac <- sample(L3, 10, replace = TRUE)
(d <- data.frame(x = 1, y = 1:10, fac = fac))
d
str(d)
# create a plotting structure
pts <- list(x = cars[,1], y = cars[,2])
pts
ls()
ls()
rm(a)
a
rm(list = ls())
rm(list = ls()) # clean everything
x<- 8
x
rep(x,10)
y <- rep(x,10)
y
seq(2,10,2)
seq(2,10,.5)
seq(-2,10,.5)
seq(10,5,.5)
seq(10,5)
runif(5,1,10)
a <- seq(1,10,2)
a
b <- seq(1,5,2)
b
a + 10
a + b
length(x)
length(a)
mode(a)
a <- "R is fun"
mode(a)
class(a)
Linf <- 55.0                 # define values for the von B growth function
K <- 0.3
t0 <- -0.3
age <- seq(0,10)
len <- Linf*(1-exp(-K*(age-t0)))
len
plot(len)
9/0
x <- -16
log(x)
y <- c(seq(1,5),NA,seq(7,10))
y
y + 1
abc <- array(c(1,2,3,4,5,6),dim=c(2,3))
abc
a[2,2]
abc[2,2]
y
y[6]
y(6)
abc
abc[,2]
abc[1,]
dim(abc)
dim(y)
length(y)
y[c(1,3,7)]
y
getwd()
DATA <- read.csv('Lab01example.csv')
rm(list = ls())
DATA <- read.csv('Lab01example.csv')
install.packages("ggplot2")
subset(DATA, cast == "descent")
subset(DATA, Cast == "descent")
ggplot(DATA, aes(x=Temp_deg_C, y=-Depth_m)) + geom_point() +
xlab("Temperature (deg C)") + ylab("Depth (m)") +
xlim(10,11.5) + ylim(-100, 0)
library("ggplot2")
ggplot(DATA, aes(x=Temp_deg_C, y=-Depth_m)) + geom_point() +
xlab("Temperature (deg C)") + ylab("Depth (m)") +
xlim(10,11.5) + ylim(-100, 0)
ggplot(DATA, aes(x=Temp_deg_C, y=-Depth_m, color=Cast)) + geom_point() +
xlab("Temperature (deg C)") + ylab("Depth (m)") +
xlim(10,11.5) + ylim(-100, 0)
par(ask=F)
setwd('C:/Users/nmayot/Documents/PostDoc/teaching supervise/Colby 2019/Rbigelow/Tutorials/Colby2019/Lab1')
setwd('C:/Users/nmayot/Documents/PostDoc/teaching supervise/Colby 2019/Rbigelow/Tutorials/Colby2019/Lab01')
DATA <- read.csv('Lab01example.csv')
ggplot(DATA, aes(x=Temp_deg_C, y=-Depth_m)) + geom_point()
ggplot(DATA, aes(x=Temp_deg_C, y=-Depth_m)) + geom_point() +
xlab("Temperature (deg C)") + ylab("Depth (m)") +
xlim(10,11.5) + ylim(-100, 0)
ggplot(DATA, aes(y=Temp_deg_C, x=-Depth_m))  + geom_line() +
xlab("Temperature (deg C)") + ylab("Depth (m)") +
ylim(10,11.5) + xlim(-100, 0)
ggplot(DATA, aes(y=Temp_deg_C, x=-Depth_m))  + geom_line() +
xlab("Temperature (deg C)") + ylab("Depth (m)") +
ylim(10,11.5) + xlim(-100, 0) + coord_flip()
ggplot(DATA, aes(y=Temp_deg_C, x=-Depth_m))  + geom_line()
ggplot(DATA, aes(x=Temp_deg_C, y=-Depth_m))  + geom_line()
ggplot(DATA, aes(y=Temp_deg_C, x=-Depth_m))  + geom_line()
ggplot(DATA, aes(y=Temp_deg_C, x=-Depth_m))  + geom_line() +
ylim(10,11.5) + xlim(-100, 0) + coord_flip()
ggplot(DATA, aes(y=Temp_deg_C, x=-Depth_m, color=Cast)) + geom_line() +
xlab("Temperature (deg C)") + ylab("Depth (m)") + coord_flip() +
ylim(10,11.5) + xlim(-100, 0) + coord_flip()
summary(DATA)
summary(DATA)
